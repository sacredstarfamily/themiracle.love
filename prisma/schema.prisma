generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id        String   @id @default(cuid())
  title     String   @db.VarChar(255)
  createdAt DateTime @default(now()) @db.Timestamp(6)
  content   String?
  published Boolean  @default(false)
  authorId  String
  User      User     @relation(fields: [authorId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Profile {
  id     String  @id @default(cuid())
  bio    String?
  userId String  @unique
  User   User    @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model User {
  id                  String    @id @default(cuid())
  name                String?   @db.VarChar(255)
  email               String    @unique @db.VarChar(255)
  hashedPassword      String    @db.VarChar(255)
  verificationToken   String    @default(uuid())
  sessionToken        String?   @db.VarChar(255)
  emailVerified       Boolean   @default(false)
  walletAddress       String?
  Post                Post[]
  Profile             Profile?
  Session             Session?
  Order               Order[]
  passwordResetLink   String?   @default(uuid())
  passwordResetToken  Int?
  passwordResetExpiry DateTime?

  @@unique([id, sessionToken])
}

model Session {
  sessionId String   @unique
  userId    String   @unique
  User      User     @relation(fields: [userId, sessionId], references: [id, sessionToken], onDelete: Cascade, onUpdate: Cascade)
  ExpiresAt DateTime

  @@unique([userId, sessionId])
}

model Order {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @db.Timestamp(6)
  updatedAt DateTime @default(now()) @db.Timestamp(6)
  status    String   @default("PENDING")
  userId    String
  User      User     @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  items     Item[]
}

model Item {
  id       String  @id @default(cuid())
  name     String
  price    Float
  quantity Int
  Order    Order?  @relation(fields: [orderId], references: [id])
  orderId  String?
}
